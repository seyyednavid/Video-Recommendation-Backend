name: Build and Push Backend Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-qemu-action@v1

      - name: Build Docker image
        run: docker build -t navidhejazi/video-recommendation-back:latest .

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        env:
          PROD_SERVER_ENV_FILE: ${{ secrets.PROD_SERVER_ENV_FILE }}

      - name: Push Docker image
        run: docker push navidhejazi/video-recommendation-back:latest

  deploy:
  runs-on: ubuntu-latest
  needs: build

  steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy Docker Compose files and environment variables to EC2
      run: |
        scp -i ${{ secrets.SSH_PRIVATE_KEY }} -r docker-compose.yaml $SSH_USERNAME@$SSH_HOSTNAME:$EC2_PATH
        # Add your environment variables directly to the remote server
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} $SSH_USERNAME@$SSH_HOSTNAME "echo 'PROD_SERVER_ENV_FILE=${{ secrets.PROD_SERVER_ENV_FILE }}' > $EC2_PATH/.env"

    - name: SSH into EC2 and deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} $SSH_USERNAME@$SSH_HOSTNAME "cd $EC2_PATH && docker-compose down && docker-compose up -d"

    # steps:
    #   - name: Checkout source code
    #     uses: actions/checkout@v2

    #   - name: stop the previose compose file
    #     run: docker-compose down

    #   - name: start the previose compose file
    #     run: docker-compose up -d

# name: CICD

# on:
#   push:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: [ubuntu-latest]
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v3
#       - name: Create .env File
#         id: create-env-file
#         run: |
#           touch ./.env
#           echo "${{ secrets.PROD_SERVER_ENV_FILE}}" > ./.env
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - name: Build docker image
#         run: docker build -t navidhejazi/video-recommendation-backend .
#       - name: Publish image to docker hub
#         run: docker push navidhejazi/video-recommendation-backend:latest

#   deploy:
#     needs: build
#     runs-on: [aws-ec2-runner]
#     steps:
#       - name: Pull image from docker hub
#         run: docker pull navidhejazi/video-recommendation-backend:latest
#       - name: Delete old container
#         run: docker rm -f video-recommendation-backend-container
#       - name: Run docker container
#         run: docker run -d -p 3002:3002 --name video-recommendation-backend-container navidhejazi/video-recommendation-backend

